// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Container.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class SimpleContainer : public Container {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SIMPLECONTAINER
public:
    class SimpleContainer& operator=(class SimpleContainer const&) = delete;
    SimpleContainer(class SimpleContainer const&) = delete;
    SimpleContainer() = delete;
#endif

public:
    /*0*/ virtual ~SimpleContainer();
    /*1*/ virtual void init();
    /*2*/ virtual void serverInitItemStackIds(int, int, class std::function<void (int, class ItemStack const& )>);
    /*3*/ virtual class ItemStack const& getItem(int) const;
    /*4*/ virtual void setItem(int, class ItemStack const&);
    /*5*/ virtual int getContainerSize() const;
    /*6*/ virtual int getMaxStackSize() const;
    /*7*/ virtual void startOpen(class Player&);
    /*8*/ virtual void stopOpen(class Player&);
    /*9*/ virtual void __unk_vfn_0();
    /*10*/ virtual void __unk_vfn_1();
    /*11*/ virtual void __unk_vfn_2();
    MCAPI SimpleContainer(std::string const&, bool, int, enum ContainerType);

protected:

private:

};