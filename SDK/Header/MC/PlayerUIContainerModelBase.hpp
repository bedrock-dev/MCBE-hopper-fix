// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ContainerModel.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class PlayerUIContainerModelBase : public ContainerModel {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PLAYERUICONTAINERMODELBASE
public:
    class PlayerUIContainerModelBase& operator=(class PlayerUIContainerModelBase const&) = delete;
    PlayerUIContainerModelBase(class PlayerUIContainerModelBase const&) = delete;
    PlayerUIContainerModelBase() = delete;
#endif

public:
    /*0*/ virtual void containerContentChanged(int);
    /*1*/ virtual ~PlayerUIContainerModelBase();
    /*2*/ virtual void postInit();
    /*3*/ virtual void releaseResources();
    /*4*/ virtual void __unk_vfn_0();
    /*5*/ virtual class ContainerWeakRef getContainerWeakRef() const;
    /*6*/ virtual std::vector<class ItemStack> const& getItems() const;
    /*7*/ virtual class ItemStackBase const& getItemStackBase(int) const;
    /*8*/ virtual void __unk_vfn_1();
    /*9*/ virtual bool isValid();
    /*10*/ virtual void __unk_vfn_2();
    /*11*/ virtual void __unk_vfn_3();
    /*12*/ virtual void __unk_vfn_4();
    /*13*/ virtual std::string const& getItemGroupName(int) const;
    /*14*/ virtual void __unk_vfn_5();
    /*15*/ virtual class Container* _getContainer() const;
    /*16*/ virtual int _getContainerOffset() const;
    /*17*/ virtual void _onItemChanged(int, class ItemStack const&, class ItemStack const&);
    MCAPI PlayerUIContainerModelBase(enum ContainerEnumName, class Player&, int, enum ContainerCategory);

protected:
    MCAPI void _refreshContainer(bool);

private:

};