// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BaseMoveToBlockGoal.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class MoveToLiquidGoal : public BaseMoveToBlockGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVETOLIQUIDGOAL
public:
    class MoveToLiquidGoal& operator=(class MoveToLiquidGoal const&) = delete;
    MoveToLiquidGoal(class MoveToLiquidGoal const&) = delete;
    MoveToLiquidGoal() = delete;
#endif

public:
    /*0*/ virtual ~MoveToLiquidGoal();
    /*1*/ virtual bool canUse();
    /*2*/ virtual bool canContinueToUse();
    /*3*/ virtual void __unk_vfn_0();
    /*4*/ virtual void appendDebugInfo(std::string&) const;
    /*5*/ virtual void __unk_vfn_1();
    /*6*/ virtual void __unk_vfn_2();
    /*7*/ virtual bool isValidTarget(class BlockSource&, class BlockPos const&);
    /*8*/ virtual unsigned __int64 _getRepathTime() const;
    /*9*/ virtual bool findTargetBlock();
    MCAPI MoveToLiquidGoal(class Mob&, float, int, int, int, enum MaterialType, float);

protected:

private:

};