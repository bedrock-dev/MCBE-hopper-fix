// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BlockPos {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BLOCKPOS
public:
    class BlockPos& operator=(class BlockPos const&) = delete;
    BlockPos(class BlockPos const&) = delete;
    BlockPos() = delete;
#endif

public:
    MCAPI BlockPos(class ChunkPos const&, class ChunkBlockPos const&, short);
    MCAPI BlockPos(class ChunkPos const&, int);
    MCAPI BlockPos(class SubChunkPos const&);
    MCAPI BlockPos(class Vec3 const&);
    MCAPI BlockPos(float, float, float);
    MCAPI BlockPos(double, double, double);
    MCAPI class Vec3 bottomCenter() const;
    MCAPI class Vec3 center() const;
    MCAPI bool cerealize(class BasicSaver&, struct SerializerTraits const&) const;
    MCAPI bool decerealize(class BasicLoader&, struct SerializerTraits const&, class BedrockLoadContext const&);
    MCAPI class BlockPos neighbor(unsigned char) const;
    MCAPI bool operator==(class BlockPos const&);
    MCAPI int randomSeed() const;
    MCAPI class BlockPos relative(unsigned char, int) const;
    MCAPI std::string toString() const;
    MCAPI class BlockPos transform(enum Rotation, enum Mirror, class Vec3 const&) const;
    MCAPI static class BlockPos const MAX;
    MCAPI static class BlockPos const MIN;
    MCAPI static class BlockPos const ONE;
    MCAPI static class BlockPos const ZERO;
    MCAPI static void bindType();

protected:

private:

};