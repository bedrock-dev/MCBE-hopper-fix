// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class TickingAreasManager {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TICKINGAREASMANAGER
public:
    class TickingAreasManager& operator=(class TickingAreasManager const&) = delete;
    TickingAreasManager(class TickingAreasManager const&) = delete;
    TickingAreasManager() = delete;
#endif

public:
    MCAPI TickingAreasManager(class std::unordered_map<class AutomaticID<class Dimension, int>, std::unique_ptr<class Dimension>, struct std::hash<class AutomaticID<class Dimension, int> >, struct std::equal_to<class AutomaticID<class Dimension, int> >, class std::allocator<struct std::pair<class AutomaticID<class Dimension, int> const, std::unique_ptr<class Dimension> > > >&);
    MCAPI void _requeueEntityArea(class Dimension&, struct ActorUniqueID const&, struct Bounds const&, bool, float);
    MCAPI enum AddTickingAreaStatus addArea(class Dimension&, std::string const&, class BlockPos const&, class BlockPos const&, bool, bool);
    MCAPI enum AddTickingAreaStatus addArea(class Dimension&, std::string const&, class BlockPos const&, int, bool, bool);
    MCAPI void addEntityArea(class Dimension&, class Actor const&);
    MCAPI unsigned int countActiveStandaloneTickingAreas() const;
    MCAPI unsigned int countStandaloneTickingAreas() const;
    MCAPI std::vector<struct TickingAreaDescription> getPendingAreaDescriptions(class AutomaticID<class Dimension, int>) const;
    MCAPI bool hasActiveAreas() const;
    MCAPI void loadArea(std::string const&, class CompoundTag*);
    MCAPI bool removePendingAreaByName(class Dimension&, std::string const&);
    MCAPI bool removePendingAreaByPosition(class Dimension&, class BlockPos const&);
    MCAPI void tick(struct Tick const&);
    MCAPI void update(class Level&);

protected:

private:
    MCAPI enum AddTickingAreaStatus _addArea(class Dimension&, std::string const&, struct Bounds const&, bool, bool, bool);
    MCAPI void _deletePendingArea(class LevelStorage&, struct PendingArea const&);
    MCAPI std::string _findUsableDefaultName(class TickingAreaList const&, std::vector<struct PendingArea> const&) const;
    MCAPI bool _hasPendingTickingAreaNamed(std::string const&, std::vector<struct PendingArea> const&) const;
    MCAPI void _processAdds(class Level&);
    MCAPI void _savePendingArea(class LevelStorage&, class AutomaticID<class Dimension, int>, struct PendingArea const&);

};