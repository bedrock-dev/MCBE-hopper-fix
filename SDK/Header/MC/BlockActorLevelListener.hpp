// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockSourceListener.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BlockActorLevelListener : public BlockSourceListener {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BLOCKACTORLEVELLISTENER
public:
    class BlockActorLevelListener& operator=(class BlockActorLevelListener const&) = delete;
    BlockActorLevelListener(class BlockActorLevelListener const&) = delete;
#endif

public:
    /*0*/ virtual ~BlockActorLevelListener();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void onSourceDestroyed(class BlockSource&);
    /*3*/ virtual void __unk_vfn_1();
    /*4*/ virtual void __unk_vfn_2();
    /*5*/ virtual void __unk_vfn_3();
    /*6*/ virtual void onBlockEntityAboutToBeRemoved(class BlockSource&, class std::shared_ptr<class BlockActor>);
    /*7*/ virtual void __unk_vfn_4();
    /*8*/ virtual void __unk_vfn_5();
    /*9*/ virtual void __unk_vfn_6();
    /*10*/ virtual void __unk_vfn_7();
    /*11*/ virtual void __unk_vfn_8();
    /*12*/ virtual void __unk_vfn_9();
    /*13*/ virtual void __unk_vfn_10();
    /*14*/ virtual void __unk_vfn_11();
    /*15*/ virtual void __unk_vfn_12();
    /*16*/ virtual void __unk_vfn_13();
    /*17*/ virtual void __unk_vfn_14();
    /*18*/ virtual void __unk_vfn_15();
    /*19*/ virtual void __unk_vfn_16();
    /*20*/ virtual void __unk_vfn_17();
    /*21*/ virtual void onChunkLoaded(class ChunkSource&, class LevelChunk&);
    /*22*/ virtual void __unk_vfn_18();
    /*23*/ virtual void __unk_vfn_19();
    /*24*/ virtual void onChunkUnloaded(class LevelChunk&);
    /*
    inline  ~BlockActorLevelListener(){
         (BlockActorLevelListener::*rv)();
        *((void**)&rv) = dlsym("??1BlockActorLevelListener@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI BlockActorLevelListener();

protected:

private:

};