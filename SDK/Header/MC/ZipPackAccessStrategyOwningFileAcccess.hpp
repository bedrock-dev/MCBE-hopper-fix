// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Core.hpp"
#include "ZipPackAccessStrategy.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ZipPackAccessStrategyOwningFileAcccess : public ZipPackAccessStrategy {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ZIPPACKACCESSSTRATEGYOWNINGFILEACCCESS
public:
    class ZipPackAccessStrategyOwningFileAcccess& operator=(class ZipPackAccessStrategyOwningFileAcccess const&) = delete;
    ZipPackAccessStrategyOwningFileAcccess(class ZipPackAccessStrategyOwningFileAcccess const&) = delete;
    ZipPackAccessStrategyOwningFileAcccess() = delete;
#endif

public:
    /*0*/ virtual ~ZipPackAccessStrategyOwningFileAcccess();
    /*1*/ virtual class ResourceLocation const& getPackLocation() const;
    /*2*/ virtual std::string const& getPackName() const;
    /*3*/ virtual void forEachInAssetSet(class Core::Path const&, class std::function<void (class Core::Path const& )>) const;
    /*4*/ virtual enum PackAccessStrategyType getStrategyType() const;
    /*5*/ virtual class Core::PathBuffer<std::string > const& getSubPath() const;
    /*6*/ virtual bool canRecurse() const;
    MCAPI ZipPackAccessStrategyOwningFileAcccess(class std::shared_ptr<class IFileAccess>, class ResourceLocation const&, class Core::Path const&);

protected:

private:

};