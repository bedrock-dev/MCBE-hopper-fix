// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BaseMoveToGoal.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class MoveToVillageGoal : public BaseMoveToGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVETOVILLAGEGOAL
public:
    class MoveToVillageGoal& operator=(class MoveToVillageGoal const&) = delete;
    MoveToVillageGoal(class MoveToVillageGoal const&) = delete;
    MoveToVillageGoal() = delete;
#endif

public:
    /*0*/ virtual ~MoveToVillageGoal();
    /*1*/ virtual bool canUse();
    /*2*/ virtual bool canContinueToUse();
    /*3*/ virtual void __unk_vfn_0();
    /*4*/ virtual void start();
    /*5*/ virtual void tick();
    /*6*/ virtual void appendDebugInfo(std::string&) const;
    /*7*/ virtual void __unk_vfn_1();
    /*8*/ virtual void __unk_vfn_2();
    /*9*/ virtual bool isValidTarget(class BlockSource&, class BlockPos const&);
    /*10*/ virtual void _moveToBlock();
    /*11*/ virtual unsigned __int64 _getRepathTime() const;
    /*12*/ virtual class BlockPos _selectRandomPosInVillage();
    MCAPI MoveToVillageGoal(class Mob&, float, float, float, int);

protected:
    MCAPI class std::shared_ptr<class Village> _tryGetCurrentVillage();

private:

};